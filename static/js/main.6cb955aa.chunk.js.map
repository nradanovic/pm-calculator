{"version":3,"sources":["components/ExpressionDisplay/ExpressionDisplay.tsx","data/KeyPadKeys.tsx","hooks/useExpressionReducer/useExpressionState.tsx","hooks/useExpressionReducer/useExpressionActions.tsx","components/Button/Button.tsx","components/Keypad/Keypad.tsx","components/ResultDisplay/ResultDisplay.tsx","App.tsx","hooks/useExpressionReducer/useExpressionReducer.tsx","hooks/useKeydownEventListener/useKeydownEventListener.tsx","hooks/useMathApi/useMathApi.tsx","serviceWorker.ts","index.tsx"],"names":["ExpressionDisplay","expression","position","useState","display","setDisplay","createBtnElement","char","index","currentposition","key","className","useEffect","displayElements","split","map","newElementPlaceholder","length","Direction","keyPadKeys","label","keyboardEventCode","value","MoveAction","payload","type","calculatorInitialState","Button","clickHandler","onClick","Keypad","buttons","ResultDisplay","result","App","useReducer","state","action","newExpression","substr","insertCharAtPosition","moveSelectorPosition","RIGHT","direction","LEFT","deleteCharAtPosition","calculatorState","dispatch","Math","max","min","useExpressionReducer","onKeyHandler","handleKeydown","event","find","window","addEventListener","removeEventListener","useKeydownEventListener","setResult","fetchData","a","requestConfig","params","expr","Axios","get","data","reqTimeout","setTimeout","clearTimeout","useMathApi","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iVAGe,SAASA,EAAT,GAAgG,IAAnEC,EAAkE,EAAlEA,WAAYC,EAAsD,EAAtDA,SAAsD,EAC9EC,qBAD8E,mBACrGC,EADqG,KAC5FC,EAD4F,KAG5G,SAASC,EAAiBC,EAAcC,EAAeC,GACrD,OACE,0BAAMC,IAAKF,EAAOG,UAAWH,IAAUC,EAAkB,oBAAsB,IAC5EF,GAeP,OAVAK,qBAAU,WACR,IAAMC,EAAkBZ,EACrBa,MAAM,IACNC,KAAI,SAACR,EAAcC,GAAf,OAAiCF,EAAiBC,EAAMC,EAAON,MAEhEc,EAAwBV,EAAiB,GAAIL,EAAWgB,OAAQf,GAEtEG,EAAW,GAAD,mBAAKQ,GAAL,CAAsBG,OAC/B,CAACf,EAAYC,IAET,yBAAKS,UAAU,wBAAwBP,GClBzC,ICNKc,EDMCC,EAA0B,CACrC,CAAEC,MAAO,IAAKC,kBAAmB,YAAaC,MAAO,KACrD,CAAEF,MAAO,IAAKC,kBAAmB,aAAcC,MAAO,KACtD,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,KAC7C,CAAEF,MAAO,MAAOC,kBAAmB,YAAaC,MAAO,OACvD,CAAEF,MAAO,IAAKC,kBAAmB,IAAKC,MAAO,M,OEjBlCC,EAAa,SAACC,GAAD,MAA8G,CACtIC,KAF8B,6BAG9BD,a,SDXUN,O,eAAAA,I,kBAAAA,M,KAUL,IAAMQ,EAA0C,CACrDzB,WAAY,GACZC,SAAU,G,6CEVG,SAASyB,EAAT,GAAuF,IAArEP,EAAoE,EAApEA,MAAOQ,EAA6D,EAA7DA,aACtC,OAAO,4BAAQC,QAASD,GAAeR,G,MCE1B,SAASU,EAAT,GAAiH,IAA/FX,EAA8F,EAA9FA,WAAYS,EAAkF,EAAlFA,aACrCG,EAAUZ,EAAWJ,KAAI,SAACL,GAAD,OAAS,kBAACiB,EAAD,CAAQjB,IAAKA,EAAIU,MAAOA,MAAOV,EAAIU,MAAOQ,aAAc,kBAAMA,EAAalB,EAAIY,aAEvH,OAAO,yBAAKX,UAAU,UAAUoB,G,MCLnB,SAASC,EAAT,GAAwD,IAA/BC,EAA8B,EAA9BA,OACtC,OAAO,yBAAKtB,UAAU,iBAAf,KAAkCsB,GCyD5BC,MAjDf,WAAgB,IAAD,ECRA,WAAiC,IAAD,EACTC,sBAyBpC,SAAiBC,EAAwBC,GACvC,OAAQA,EAAOZ,MACb,IL9B4B,gCK+B1B,IAAMa,EA1BZ,SAA8BrC,EAAoBC,EAAkBK,GAClE,GAAIL,EAAW,GAAKA,EAAWD,EAAWgB,OACxC,OAAOhB,EAET,OAAOA,EAAWsC,OAAO,EAAGrC,GAAYK,EAAON,EAAWsC,OAAOrC,GAsBvCsC,CAAqBJ,EAAMnC,WAAYmC,EAAMlC,SAAUmC,EAAOb,QAAQjB,MAC5F,OAAO,2BACF6B,GADL,IAEEnC,WAAYqC,EACZpC,SAAUuC,EAAqBH,EAAeF,EAAMlC,SAAUgB,EAAUwB,SAE5E,IL/B0B,6BKgCxB,OAAO,2BACFN,GADL,IAEElC,SACEmC,EAAOb,QAAQmB,YAAczB,EAAU0B,KACnCH,EAAqBL,EAAMnC,WAAYmC,EAAMlC,SAAUgB,EAAU0B,MACjEH,EAAqBL,EAAMnC,WAAYmC,EAAMlC,SAAUgB,EAAUwB,SAE3E,ILjC4B,gCKkC1B,OAAO,2BACFN,GADL,IAEEnC,WAAY4C,EAAqBT,EAAMnC,WAAYmC,EAAMlC,UACzDA,SAAUuC,EAAqBL,EAAMnC,WAAYmC,EAAMlC,SAAUgB,EAAU0B,QAE/E,QACE,OAAOR,KAjD2CV,GADX,mBACtCoB,EADsC,KACrBC,EADqB,KAU7C,SAASF,EAAqB5C,EAAoBC,GAChD,OAAIA,EAAW,GAAKA,EAAWD,EAAWgB,OACjChB,EAEFA,EAAWsC,OAAO,EAAGrC,EAAW,GAAKD,EAAWsC,OAAOrC,GAGhE,SAASuC,EAAqBxC,EAAoBC,EAAkByC,GAClE,OAAIA,IAAczB,EAAU0B,KACnBI,KAAKC,IAAI,EAAG/C,EAAW,GACrByC,IAAczB,EAAUwB,MAC1BM,KAAKE,IAAIjD,EAAWgB,OAAQf,EAAW,GAEzCA,EA+BT,MAAO,CAAED,WAAY6C,EAAgB7C,WAAYC,SAAU4C,EAAgB5C,SAAU6C,YD7C1CI,GAAnClD,EADK,EACLA,WAAYC,EADP,EACOA,SAAU6C,EADjB,EACiBA,UEVjB,YAA6F,IAA1DK,EAAyD,EAAzDA,aAChDxC,qBAAU,WACR,IAAMyC,EAAgB,SAACC,GACrB,IAAM5C,EAAMS,EAAWoC,MAAK,SAAC7C,GAAD,OAASA,EAAIW,oBAAsBiC,EAAM5C,OACjEA,GACF0C,EAAa1C,EAAIY,QAKrB,OAFAkC,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,MAEvC,CAACD,IFDJO,CAAwB,CAAEP,iBAHb,IAKLnB,EGdK,YAA6D,IAAvChC,EAAsC,EAAtCA,WAAsC,EAC7CE,mBAASF,GADoC,mBAClEgC,EADkE,KAC1D2B,EAD0D,KA8BzE,OA1BAhD,qBAAU,WACR,GAAKX,EAAL,CAKA,IAAM4D,EAAS,uCAAG,8BAAAC,EAAA,4DACJ,6BACNC,EAAoC,CACxCC,OAAQ,CACNC,KAAMhE,IAJM,kBASOiE,IAAMC,IARjB,6BAQ0BJ,GATtB,OASR9B,EATQ,OAUd2B,EAAU3B,EAAOmC,MAVH,gDAYdR,EAAU,sBAZI,yDAAH,qDAgBTS,EAAaC,YAAW,kBAAMT,MAxBjB,KAyBnB,OAAO,kBAAMU,aAAaF,IArBxBT,EAAU,MAsBX,CAAC3D,IAEG,CAAEgC,UHhBUuC,CAAW,CAAEvE,eAAxBgC,OAER,SAASmB,EAAa7C,GACpB,OAAQA,GACN,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACH,OAAOwC,EJnC6G,CAC1HtB,KAFgC,gCAGhCD,QIiCmC,CAAEjB,UACjC,IAAK,IACH,OAAOwC,EAASxB,EAAW,CAAEoB,UAAWzB,EAAU0B,QACpD,IAAK,IACH,OAAOG,EAASxB,EAAW,CAAEoB,UAAWzB,EAAUwB,SACpD,IAAK,MACH,OAAOK,EJ7ByD,CACtEtB,KAFgC,kCI+B5B,QACE,QAIN,OACE,yBAAKd,UAAU,OACb,0BAAMA,UAAU,eACd,kBAAC,EAAD,CAAmBV,WAAYA,EAAYC,SAAUA,IACrD,kBAAC,EAAD,CAAe+B,OAAQA,IACvB,kBAAC,EAAD,CAAQd,WAAYA,EAAYS,aAAcwB,OI3ClCqB,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6cb955aa.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./ExpressionDisplay.css\";\r\n\r\nexport default function ExpressionDisplay({ expression, position }: { expression: string; position: number }) {\r\n  const [display, setDisplay] = useState<JSX.Element[]>();\r\n\r\n  function createBtnElement(char: string, index: number, currentposition: number) {\r\n    return (\r\n      <span key={index} className={index === currentposition ? \"positionIndicator\" : \"\"}>\r\n        {char}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    const displayElements = expression\r\n      .split(\"\")\r\n      .map((char: string, index: number) => createBtnElement(char, index, position));\r\n\r\n    const newElementPlaceholder = createBtnElement(\"\", expression.length, position);\r\n\r\n    setDisplay([...displayElements, newElementPlaceholder]);\r\n  }, [expression, position]);\r\n\r\n  return <div className=\"expressionInputField\">{display}</div>;\r\n}\r\n","export interface keyPadKey {\r\n  value: string;\r\n  keyboardEventCode: string | null;\r\n  label: string;\r\n}\r\n\r\nexport const keyPadKeys: keyPadKey[] = [\r\n  { label: \"<\", keyboardEventCode: \"ArrowLeft\", value: \"<\" },\r\n  { label: \">\", keyboardEventCode: \"ArrowRight\", value: \">\" },\r\n  { label: \"(\", keyboardEventCode: \"(\", value: \"(\" },\r\n  { label: \")\", keyboardEventCode: \")\", value: \")\" },\r\n  { label: \"7\", keyboardEventCode: \"7\", value: \"7\" },\r\n  { label: \"8\", keyboardEventCode: \"8\", value: \"8\" },\r\n  { label: \"9\", keyboardEventCode: \"9\", value: \"9\" },\r\n  { label: \"/\", keyboardEventCode: \"/\", value: \"/\" },\r\n  { label: \"4\", keyboardEventCode: \"4\", value: \"4\" },\r\n  { label: \"5\", keyboardEventCode: \"5\", value: \"5\" },\r\n  { label: \"6\", keyboardEventCode: \"6\", value: \"6\" },\r\n  { label: \"*\", keyboardEventCode: \"*\", value: \"*\" },\r\n  { label: \"1\", keyboardEventCode: \"1\", value: \"1\" },\r\n  { label: \"2\", keyboardEventCode: \"2\", value: \"2\" },\r\n  { label: \"3\", keyboardEventCode: \"3\", value: \"3\" },\r\n  { label: \"-\", keyboardEventCode: \"-\", value: \"-\" },\r\n  { label: \"0\", keyboardEventCode: \"0\", value: \"0\" },\r\n  { label: \".\", keyboardEventCode: \".\", value: \".\" },\r\n  { label: \"Del\", keyboardEventCode: \"Backspace\", value: \"Del\" },\r\n  { label: \"+\", keyboardEventCode: \"+\", value: \"+\" },\r\n];\r\n","export enum Direction {\r\n  LEFT,\r\n  RIGHT,\r\n}\r\n\r\nexport type CalculatorState = {\r\n  expression: string;\r\n  position: number;\r\n};\r\n\r\nexport const calculatorInitialState: CalculatorState = {\r\n  expression: \"\",\r\n  position: 0,\r\n};\r\n","import { Direction } from \"./useExpressionState\";\r\n\r\nexport const INSERT_ACTION_TYPE = \"[Calculator] Insert character\";\r\nexport const InsertAction = (payload: { char: string }): { type: typeof INSERT_ACTION_TYPE; payload: { char: string } } => ({\r\n  type: INSERT_ACTION_TYPE,\r\n  payload,\r\n});\r\n\r\nexport const MOVE_ACTION_TYPE = \"[Calculator] Move selector\";\r\nexport const MoveAction = (payload: { direction: Direction }): { type: typeof MOVE_ACTION_TYPE; payload: { direction: Direction } } => ({\r\n  type: MOVE_ACTION_TYPE,\r\n  payload,\r\n});\r\n\r\nexport const DELETE_ACTION_TYPE = \"[Calculator] Delete character\";\r\nexport const DeleteAction = (): { type: typeof DELETE_ACTION_TYPE } => ({\r\n  type: DELETE_ACTION_TYPE,\r\n});\r\n\r\nexport type Actions = ReturnType<typeof InsertAction> | ReturnType<typeof MoveAction> | ReturnType<typeof DeleteAction>;\r\n","import React from \"react\";\r\n\r\nexport default function Button({ label, clickHandler }: { label: string; clickHandler: () => void }) {\r\n  return <button onClick={clickHandler}>{label}</button>;\r\n}\r\n","import React from \"react\";\r\nimport { keyPadKey } from \"../../data/KeyPadKeys\";\r\nimport Button from \"../Button/Button\";\r\nimport \"./Keypad.css\";\r\n\r\nexport default function Keypad({ keyPadKeys, clickHandler }: { keyPadKeys: keyPadKey[]; clickHandler: (val: string) => void }) {\r\n  const buttons = keyPadKeys.map((key) => <Button key={key.label} label={key.label} clickHandler={() => clickHandler(key.value)}></Button>);\r\n\r\n  return <div className=\"keypad\">{buttons}</div>;\r\n}\r\n","import React from \"react\";\r\nimport \"./ResultDisplay.css\";\r\n\r\nexport default function ResultDisplay({ result }: { result: string }) {\r\n  return <div className=\"resultDisplay\">= {result}</div>;\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ExpressionDisplay from \"./components/ExpressionDisplay/ExpressionDisplay\";\nimport { keyPadKeys } from \"./data/KeyPadKeys\";\nimport useExpressionReducer from \"./hooks/useExpressionReducer/useExpressionReducer\";\nimport useMathApi from \"./hooks/useMathApi/useMathApi\";\nimport Keypad from \"./components/Keypad/Keypad\";\nimport ResultDisplay from \"./components/ResultDisplay/ResultDisplay\";\nimport useKeydownEventListener from \"./hooks/useKeydownEventListener/useKeydownEventListener\";\nimport { InsertAction, MoveAction, DeleteAction } from \"./hooks/useExpressionReducer/useExpressionActions\";\nimport { Direction } from \"./hooks/useExpressionReducer/useExpressionState\";\n\nfunction App() {\n  const { expression, position, dispatch } = useExpressionReducer();\n\n  useKeydownEventListener({ onKeyHandler });\n\n  const { result } = useMathApi({ expression });\n\n  function onKeyHandler(char: string) {\n    switch (char) {\n      case \"0\":\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n      case \".\":\n      case \"(\":\n      case \")\":\n        return dispatch(InsertAction({ char }));\n      case \"<\":\n        return dispatch(MoveAction({ direction: Direction.LEFT }));\n      case \">\":\n        return dispatch(MoveAction({ direction: Direction.RIGHT }));\n      case \"Del\":\n        return dispatch(DeleteAction());\n      default:\n        return;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <main className=\"mainContent\">\n        <ExpressionDisplay expression={expression} position={position} />\n        <ResultDisplay result={result} />\n        <Keypad keyPadKeys={keyPadKeys} clickHandler={onKeyHandler} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { useReducer } from \"react\";\r\nimport { Actions, INSERT_ACTION_TYPE, MOVE_ACTION_TYPE, DELETE_ACTION_TYPE } from \"./useExpressionActions\";\r\nimport { calculatorInitialState, CalculatorState, Direction } from \"./useExpressionState\";\r\n\r\nexport default function useExpressionReducer() {\r\n  const [calculatorState, dispatch] = useReducer(reducer, calculatorInitialState);\r\n\r\n  function insertCharAtPosition(expression: string, position: number, char: string) {\r\n    if (position < 0 || position > expression.length) {\r\n      return expression;\r\n    }\r\n    return expression.substr(0, position) + char + expression.substr(position);\r\n  }\r\n\r\n  function deleteCharAtPosition(expression: string, position: number) {\r\n    if (position < 0 || position > expression.length) {\r\n      return expression;\r\n    }\r\n    return expression.substr(0, position - 1) + expression.substr(position);\r\n  }\r\n\r\n  function moveSelectorPosition(expression: string, position: number, direction: Direction): number {\r\n    if (direction === Direction.LEFT) {\r\n      return Math.max(0, position - 1);\r\n    } else if (direction === Direction.RIGHT) {\r\n      return Math.min(expression.length, position + 1);\r\n    }\r\n    return position;\r\n  }\r\n\r\n  function reducer(state: CalculatorState, action: Actions): CalculatorState {\r\n    switch (action.type) {\r\n      case INSERT_ACTION_TYPE:\r\n        const newExpression = insertCharAtPosition(state.expression, state.position, action.payload.char);\r\n        return {\r\n          ...state,\r\n          expression: newExpression,\r\n          position: moveSelectorPosition(newExpression, state.position, Direction.RIGHT),\r\n        };\r\n      case MOVE_ACTION_TYPE:\r\n        return {\r\n          ...state,\r\n          position:\r\n            action.payload.direction === Direction.LEFT\r\n              ? moveSelectorPosition(state.expression, state.position, Direction.LEFT)\r\n              : moveSelectorPosition(state.expression, state.position, Direction.RIGHT),\r\n        };\r\n      case DELETE_ACTION_TYPE:\r\n        return {\r\n          ...state,\r\n          expression: deleteCharAtPosition(state.expression, state.position),\r\n          position: moveSelectorPosition(state.expression, state.position, Direction.LEFT),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  return { expression: calculatorState.expression, position: calculatorState.position, dispatch };\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { keyPadKeys } from \"../../data/KeyPadKeys\";\r\n\r\nexport default function useKeydownEventListener({ onKeyHandler }: { onKeyHandler: (val: string) => void }) {\r\n  useEffect(() => {\r\n    const handleKeydown = (event: KeyboardEvent) => {\r\n      const key = keyPadKeys.find((key) => key.keyboardEventCode === event.key);\r\n      if (key) {\r\n        onKeyHandler(key.value);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeydown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeydown);\r\n    };\r\n  }, [onKeyHandler]);\r\n}\r\n","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function useMathApi({ expression }: { expression: string }) {\r\n  const [result, setResult] = useState(expression);\r\n  const debounceTime = 600;\r\n\r\n  useEffect(() => {\r\n    if (!expression) {\r\n      setResult(\"\");\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      const url = \"https://api.mathjs.org/v4/\";\r\n      const requestConfig: AxiosRequestConfig = {\r\n        params: {\r\n          expr: expression,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const result = await Axios.get(url, requestConfig);\r\n        setResult(result.data);\r\n      } catch (error) {\r\n        setResult(\"Invalid expression\");\r\n      }\r\n    };\r\n\r\n    const reqTimeout = setTimeout(() => fetchData(), debounceTime);\r\n    return () => clearTimeout(reqTimeout);\r\n  }, [expression]);\r\n\r\n  return { result };\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}